plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

// чтобы ktlint использовать
apply from: "../ktlint.gradle"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "ru.internetcloud.foody4"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // чтобы не "светить" Api ключ в публичном гит-хабе
        buildConfigField 'String', 'SPOONACULAR_API_KEY', keystoreProperties['SPOONACULAR_API_KEY']
        buildConfigField 'String', 'SPOONACULAR_BASE_URL', '"https://api.spoonacular.com/"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Dagger2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // fragment
    implementation "androidx.fragment:fragment:$fragmentVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    // Room
    implementation("androidx.room:room-runtime:$roomVersion")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$roomVersion")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$roomVersion")

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Gson
    implementation "com.google.code.gson:gson:2.9.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$converterGsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
}